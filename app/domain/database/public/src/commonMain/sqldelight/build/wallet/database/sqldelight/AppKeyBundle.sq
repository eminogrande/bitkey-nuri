import build.wallet.crypto.PublicKey;
import build.wallet.bitkey.app.AppGlobalAuthKey;
import build.wallet.bitkey.app.AppRecoveryAuthKey;
import build.wallet.bitkey.app.AppSpendingPublicKey;

CREATE TABLE appKeyBundleEntity(
  id              TEXT NOT NULL PRIMARY KEY,
  globalAuthKey   TEXT AS PublicKey<AppGlobalAuthKey> NOT NULL,
  spendingKey     TEXT AS AppSpendingPublicKey NOT NULL,
  recoveryAuthKey TEXT AS PublicKey<AppRecoveryAuthKey> NOT NULL
);

insertKeyBundle:
INSERT OR REPLACE INTO appKeyBundleEntity(id, globalAuthKey, spendingKey, recoveryAuthKey)
VALUES(?, ?, ?, ?);

-- When fetching the keybundle, join the key table for each key.
keyBundleById:
SELECT * FROM appKeyBundleEntity
WHERE id = ?;

rotateAppAuthKeys:
UPDATE appKeyBundleEntity SET
    globalAuthKey = ?,
    recoveryAuthKey = ?
WHERE id = ?;

clear:
DELETE FROM appKeyBundleEntity;

lastInsertRowId:
SELECT last_insert_rowid();

deleteById:
DELETE FROM appKeyBundleEntity WHERE appKeyBundleEntity.id = ?;
